name : Deploy Core Service
on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Overwrite Application property file
        run: |
          cd src/main/resources
          echo spring.datasource.url='jdbc:postgresql://${{secrets.DB}}:5432/crispyRead' > application.properties 
          echo spring.datasource.username='${{secrets.DB_USER}}' >> application.properties
          echo spring.datasource.password='${{secrets.DB_PASSWORD}}' >> application.properties
          echo spring.datasource.driver-class-name=org.postgresql.Driver >> application.properties
          echo spring.jpa.hibernate.ddl-auto=update >> application.properties
          echo spring.security.user.name='${{secrets.USER}}' >> application.properties
          echo spring.security.user.password='${{secrets.USER_PASSWORD}}' >> application.properties
          echo auth.token.cookie='${{secrets.AUTH_TOKEN_COOKIE}}' >> application.properties

      - name: Build Docker Image
        run: |
          docker build .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: shailendra98k
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: shailendra98k/crispyread-core

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Configure AWS Credentials
        run: |
          mkdir ~/.aws
          touch ~/.aws/credentials
          echo "[default]" > ~/.aws/credentials
          echo "region"="ap-south-1" >> ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Update ECS Task Definition
        run: |
          # Using AWS CLI to update the ECS task definition with the new image tag
          aws ecs register-task-definition --family crispyread-core  --container-definitions '[{"name":"crispyread-core","image":"shailendra98k/crispyread-core:master", "memory":428, "portMappings":[{"hostPort": 8080, "protocol": "tcp", "containerPort":8080}] }]' --region ap-south-1

      - name: Stop ECS Task
        run: |
          aws ecs list-tasks --cluster "CrispyRead" --family crispyread-core | jq -r ".taskArns[]" | xargs -r -n1 aws ecs stop-task --no-cli-pager --cluster "CrispyRead" --task

      - name: Run ECS Task
        run: |
          # Using AWS CLI to run the ECS task using the updated task definition
          aws ecs run-task --cluster CrispyRead --task-definition crispyread-core